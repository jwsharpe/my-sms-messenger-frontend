{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../dashboard-api.service\";\nimport * as i2 from \"@angular/forms\";\nexport class SmsFormComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.phoneNumber = '';\n    this.message = '';\n  } // Inject your API service\n  submitSmsForm() {\n    if (this.phoneNumber && this.message) {\n      // Handle SMS submission logic here\n      this.apiService.submitSms(this.phoneNumber, this.message).subscribe(response => {\n        console.log('SMS Submitted:', response);\n        // Clear form fields\n        this.phoneNumber = '';\n        this.message = '';\n      }, error => {\n        console.error('Error submitting SMS:', error);\n      });\n    }\n  }\n}\nSmsFormComponent.ɵfac = function SmsFormComponent_Factory(t) {\n  return new (t || SmsFormComponent)(i0.ɵɵdirectiveInject(i1.DashboardApiService));\n};\nSmsFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SmsFormComponent,\n  selectors: [[\"app-sms-form\"]],\n  decls: 12,\n  vars: 2,\n  consts: [[1, \"sms-form-container\"], [3, \"ngSubmit\"], [\"for\", \"phoneNumber\"], [\"type\", \"text\", \"id\", \"phoneNumber\", \"name\", \"phoneNumber\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"message\"], [\"id\", \"message\", \"name\", \"message\", \"rows\", \"4\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function SmsFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"SMS Submission Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function SmsFormComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.submitSmsForm();\n      });\n      i0.ɵɵelementStart(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Phone Number:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function SmsFormComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.phoneNumber = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Message:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"textarea\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function SmsFormComponent_Template_textarea_ngModelChange_9_listener($event) {\n        return ctx.message = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 6);\n      i0.ɵɵtext(11, \"Submit SMS\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.phoneNumber);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.message);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["SmsFormComponent","constructor","apiService","phoneNumber","message","submitSmsForm","submitSms","subscribe","response","console","log","error","i0","ɵɵdirectiveInject","i1","DashboardApiService","selectors","decls","vars","consts","template","SmsFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","SmsFormComponent_Template_form_ngSubmit_3_listener","SmsFormComponent_Template_input_ngModelChange_6_listener","$event","SmsFormComponent_Template_textarea_ngModelChange_9_listener","ɵɵadvance","ɵɵproperty"],"sources":["/Users/kenken/Projects/city-hive-project/my-sms-messenger-frontend/src/app/dashboard/sms-form/sms-form.component.ts","/Users/kenken/Projects/city-hive-project/my-sms-messenger-frontend/src/app/dashboard/sms-form/sms-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DashboardApiService } from '../dashboard-api.service';\n\n@Component({\n  selector: 'app-sms-form',\n  templateUrl: './sms-form.component.html',\n  styleUrls: ['./sms-form.component.scss'],\n})\nexport class SmsFormComponent {\n  phoneNumber: string = '';\n  message: string = '';\n\n  constructor(private apiService: DashboardApiService) {} // Inject your API service\n\n  submitSmsForm() {\n    if (this.phoneNumber && this.message) {\n      // Handle SMS submission logic here\n      this.apiService.submitSms(this.phoneNumber, this.message).subscribe(\n        (response) => {\n          console.log('SMS Submitted:', response);\n          // Clear form fields\n          this.phoneNumber = '';\n          this.message = '';\n        },\n        (error) => {\n          console.error('Error submitting SMS:', error);\n        }\n      );\n    }\n  }\n}\n","<div class=\"sms-form-container\">\n  <h2>SMS Submission Form</h2>\n  <form (ngSubmit)=\"submitSmsForm()\">\n    <label for=\"phoneNumber\">Phone Number:</label>\n    <input\n      type=\"text\"\n      id=\"phoneNumber\"\n      name=\"phoneNumber\"\n      required\n      [(ngModel)]=\"phoneNumber\"\n    />\n\n    <label for=\"message\">Message:</label>\n    <textarea\n      id=\"message\"\n      name=\"message\"\n      rows=\"4\"\n      required\n      [(ngModel)]=\"message\"\n    ></textarea>\n\n    <button type=\"submit\">Submit SMS</button>\n  </form>\n</div>\n"],"mappings":";;;AAQA,OAAM,MAAOA,gBAAgB;EAI3BC,YAAoBC,UAA+B;IAA/B,KAAAA,UAAU,GAAVA,UAAU;IAH9B,KAAAC,WAAW,GAAW,EAAE;IACxB,KAAAC,OAAO,GAAW,EAAE;EAEkC,CAAC,CAAC;EAExDC,aAAaA,CAAA;IACX,IAAI,IAAI,CAACF,WAAW,IAAI,IAAI,CAACC,OAAO,EAAE;MACpC;MACA,IAAI,CAACF,UAAU,CAACI,SAAS,CAAC,IAAI,CAACH,WAAW,EAAE,IAAI,CAACC,OAAO,CAAC,CAACG,SAAS,CAChEC,QAAQ,IAAI;QACXC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,QAAQ,CAAC;QACvC;QACA,IAAI,CAACL,WAAW,GAAG,EAAE;QACrB,IAAI,CAACC,OAAO,GAAG,EAAE;MACnB,CAAC,EACAO,KAAK,IAAI;QACRF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CACF;;EAEL;;AArBWX,gBAAgB,C;mBAAhBA,gBAAgB,EAAAY,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,mBAAA;AAAA;AAAhBf,gBAAgB,C;QAAhBA,gBAAgB;EAAAgB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR7BV,EAAA,CAAAY,cAAA,aAAgC;MAC1BZ,EAAA,CAAAa,MAAA,0BAAmB;MAAAb,EAAA,CAAAc,YAAA,EAAK;MAC5Bd,EAAA,CAAAY,cAAA,cAAmC;MAA7BZ,EAAA,CAAAe,UAAA,sBAAAC,mDAAA;QAAA,OAAYL,GAAA,CAAAlB,aAAA,EAAe;MAAA,EAAC;MAChCO,EAAA,CAAAY,cAAA,eAAyB;MAAAZ,EAAA,CAAAa,MAAA,oBAAa;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MAC9Cd,EAAA,CAAAY,cAAA,eAME;MADAZ,EAAA,CAAAe,UAAA,2BAAAE,yDAAAC,MAAA;QAAA,OAAAP,GAAA,CAAApB,WAAA,GAAA2B,MAAA;MAAA,EAAyB;MAL3BlB,EAAA,CAAAc,YAAA,EAME;MAEFd,EAAA,CAAAY,cAAA,eAAqB;MAAAZ,EAAA,CAAAa,MAAA,eAAQ;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MACrCd,EAAA,CAAAY,cAAA,kBAMC;MADCZ,EAAA,CAAAe,UAAA,2BAAAI,4DAAAD,MAAA;QAAA,OAAAP,GAAA,CAAAnB,OAAA,GAAA0B,MAAA;MAAA,EAAqB;MACtBlB,EAAA,CAAAc,YAAA,EAAW;MAEZd,EAAA,CAAAY,cAAA,iBAAsB;MAAAZ,EAAA,CAAAa,MAAA,kBAAU;MAAAb,EAAA,CAAAc,YAAA,EAAS;;;MAZvCd,EAAA,CAAAoB,SAAA,GAAyB;MAAzBpB,EAAA,CAAAqB,UAAA,YAAAV,GAAA,CAAApB,WAAA,CAAyB;MASzBS,EAAA,CAAAoB,SAAA,GAAqB;MAArBpB,EAAA,CAAAqB,UAAA,YAAAV,GAAA,CAAAnB,OAAA,CAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}