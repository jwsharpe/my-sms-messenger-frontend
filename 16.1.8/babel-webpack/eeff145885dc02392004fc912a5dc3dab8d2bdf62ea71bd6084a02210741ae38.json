{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiBaseUrl = 'http://localhost:3000'; // Replace with your API base URL\n  }\n\n  signIn(email, password) {\n    const url = `${this.apiBaseUrl}/users/tokens/sign_in`;\n    const data = {\n      email,\n      password\n    };\n    return this.http.post(url, JSON.stringify(data));\n  }\n  signUp(email, password) {\n    const url = `${this.apiBaseUrl}/users/tokens/sign_up`;\n    const data = {\n      email,\n      password\n    };\n    return this.http.post(url, data);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","http","apiBaseUrl","signIn","email","password","url","data","post","JSON","stringify","signUp","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/kenken/Projects/city-hive-project/my-sms-messenger-frontend/src/app/auth/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private apiBaseUrl = 'http://localhost:3000'; // Replace with your API base URL\n\n  constructor(private http: HttpClient) {}\n\n  signIn(email: string, password: string): Observable<any> {\n    const url = `${this.apiBaseUrl}/users/tokens/sign_in`;\n    const data = { email, password };\n    return this.http.post(url, JSON.stringify(data));\n  }\n\n  signUp(email: string, password: string): Observable<any> {\n    const url = `${this.apiBaseUrl}/users/tokens/sign_up`;\n    const data = { email, password };\n    return this.http.post(url, data);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,UAAU,GAAG,uBAAuB,CAAC,CAAC;EAEP;;EAEvCC,MAAMA,CAACC,KAAa,EAAEC,QAAgB;IACpC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACJ,UAAU,uBAAuB;IACrD,MAAMK,IAAI,GAAG;MAAEH,KAAK;MAAEC;IAAQ,CAAE;IAChC,OAAO,IAAI,CAACJ,IAAI,CAACO,IAAI,CAACF,GAAG,EAAEG,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;EAClD;EAEAI,MAAMA,CAACP,KAAa,EAAEC,QAAgB;IACpC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACJ,UAAU,uBAAuB;IACrD,MAAMK,IAAI,GAAG;MAAEH,KAAK;MAAEC;IAAQ,CAAE;IAChC,OAAO,IAAI,CAACJ,IAAI,CAACO,IAAI,CAACF,GAAG,EAAEC,IAAI,CAAC;EAClC;;AAfWR,WAAW,C;mBAAXA,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXhB,WAAW,C;SAAXA,WAAW;EAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}