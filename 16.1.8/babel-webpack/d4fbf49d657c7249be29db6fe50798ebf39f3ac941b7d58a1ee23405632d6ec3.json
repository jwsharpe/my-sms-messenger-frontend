{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DashboardApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiBaseUrl = 'http://localhost:3000/api/v1'; // Replace with your API base URL\n    this.apiKey = 'CdCzNqh_SJEm5yi3dLSF6LKaPWayQR_AZAUZBhXPKpYi6pDy93p8P_yaUp3P'; // Replace with your API key\n  }\n\n  getHeaders() {\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.apiKey\n    });\n  }\n  getSentHistory() {\n    const url = `${this.apiBaseUrl}/messages`;\n    const headers = this.getHeaders();\n    return this.http.get(url, {\n      headers\n    }).pipe(catchError(error => {\n      console.error('Error fetching sent history:', error);\n      return throwError(error);\n    }));\n  }\n  submitSms(phoneNumber, message) {\n    const url = `${this.apiBaseUrl}/messages`;\n    const headers = this.getHeaders();\n    const body = {\n      phoneNumber,\n      body\n    };\n    return this.http.post(url, body, {\n      headers\n    }).pipe(catchError(error => {\n      console.error('Error submitting SMS:', error);\n      return throwError(error);\n    }));\n  }\n}\nDashboardApiService.ɵfac = function DashboardApiService_Factory(t) {\n  return new (t || DashboardApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nDashboardApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DashboardApiService,\n  factory: DashboardApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","catchError","throwError","DashboardApiService","constructor","http","apiBaseUrl","apiKey","getHeaders","Authorization","getSentHistory","url","headers","get","pipe","error","console","submitSms","phoneNumber","message","body","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/kenken/Projects/city-hive-project/my-sms-messenger-frontend/src/app/dashboard/dashboard-api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DashboardApiService {\n  private apiBaseUrl = 'http://localhost:3000/api/v1'; // Replace with your API base URL\n  private apiKey =\n    'CdCzNqh_SJEm5yi3dLSF6LKaPWayQR_AZAUZBhXPKpYi6pDy93p8P_yaUp3P'; // Replace with your API key\n\n  constructor(private http: HttpClient) {}\n\n  private getHeaders(): HttpHeaders {\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.apiKey,\n    });\n  }\n\n  getSentHistory(): Observable<any> {\n    const url = `${this.apiBaseUrl}/messages`;\n    const headers = this.getHeaders();\n    return this.http.get(url, { headers }).pipe(\n      catchError((error) => {\n        console.error('Error fetching sent history:', error);\n        return throwError(error);\n      })\n    );\n  }\n\n  submitSms(phoneNumber: string, message: string): Observable<any> {\n    const url = `${this.apiBaseUrl}/messages`;\n    const headers = this.getHeaders();\n    const body = { phoneNumber, body };\n    return this.http.post(url, body, { headers }).pipe(\n      catchError((error) => {\n        console.error('Error submitting SMS:', error);\n        return throwError(error);\n      })\n    );\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,UAAU,QAAQ,MAAM;;;AAKjC,OAAM,MAAOC,mBAAmB;EAK9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,UAAU,GAAG,8BAA8B,CAAC,CAAC;IAC7C,KAAAC,MAAM,GACZ,8DAA8D,CAAC,CAAC;EAE3B;;EAE/BC,UAAUA,CAAA;IAChB,OAAO,IAAIR,WAAW,CAAC;MACrB,cAAc,EAAE,kBAAkB;MAClCS,aAAa,EAAE,SAAS,GAAG,IAAI,CAACF;KACjC,CAAC;EACJ;EAEAG,cAAcA,CAAA;IACZ,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,UAAU,WAAW;IACzC,MAAMM,OAAO,GAAG,IAAI,CAACJ,UAAU,EAAE;IACjC,OAAO,IAAI,CAACH,IAAI,CAACQ,GAAG,CAACF,GAAG,EAAE;MAAEC;IAAO,CAAE,CAAC,CAACE,IAAI,CACzCb,UAAU,CAAEc,KAAK,IAAI;MACnBC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,OAAOb,UAAU,CAACa,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACH;EAEAE,SAASA,CAACC,WAAmB,EAAEC,OAAe;IAC5C,MAAMR,GAAG,GAAG,GAAG,IAAI,CAACL,UAAU,WAAW;IACzC,MAAMM,OAAO,GAAG,IAAI,CAACJ,UAAU,EAAE;IACjC,MAAMY,IAAI,GAAG;MAAEF,WAAW;MAAEE;IAAI,CAAE;IAClC,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CAACV,GAAG,EAAES,IAAI,EAAE;MAAER;IAAO,CAAE,CAAC,CAACE,IAAI,CAChDb,UAAU,CAAEc,KAAK,IAAI;MACnBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,OAAOb,UAAU,CAACa,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACH;;AAnCWZ,mBAAmB,C;mBAAnBA,mBAAmB,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAnBtB,mBAAmB,C;SAAnBA,mBAAmB;EAAAuB,OAAA,EAAnBvB,mBAAmB,CAAAwB,IAAA;EAAAC,UAAA,EAFlB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}